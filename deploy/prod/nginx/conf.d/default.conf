# HTTP configuration: только Let's Encrypt challenge и редирект на HTTPS
server {
    listen 80;
    server_name body-architect.ru;

    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Всё остальное редиректим на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS-сервер с SSL
server {
    listen 443 ssl;
    server_name body-architect.ru;

    ssl_certificate /etc/letsencrypt/live/body-architect.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/body-architect.ru/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # API endpoints
    location /api/ {
        proxy_pass http://app:4000;

        # CORS headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://app:4000;
        access_log off;
    }
    
    # Default location
    location / {
        proxy_pass http://app:4000;
    }
} 