services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    env_file:
      - .env
    container_name: ${DB_HOST}
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGPORT: ${DB_PORT}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - telegram_admin_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Elixir Application
  app:
    image: telegram-admin-api:latest
    env_file:
      - .env
    container_name: APP_CONTAINER_NAME
    restart: unless-stopped
    ports:
      - "${APP_PORT_HTTP}:${APP_PORT_HTTP}"
      - "${TELEGRAM_PORT_WEBHOOK}:${TELEGRAM_PORT_WEBHOOK}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - telegram_admin_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  telegram_admin_network:
    driver: bridge 